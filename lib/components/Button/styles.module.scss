@use '../../theme/helpers.scss' as *;
@use '../../theme/variables/color' as color;
@use '../../theme/variables/border' as border;
@use '../../theme/variables/spacing' as spacing;
@use '../../theme/variables/font' as font;

$disabled-opacity: 0.42;
$additionalButtonHeight: 2px;

.button {
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: spacing.$spacing-xxs;
  min-width: to-rem(54);
  font-family: var(--font-secondary);
  font-weight: font.$weight-medium;
  text-transform: uppercase;
  border: border.$width-thin solid transparent;
  transition: all 180ms ease-in-out;
  user-select: none;
  overflow: hidden;

  &:disabled {
    cursor: not-allowed;
    opacity: $disabled-opacity;
  }

  &:focus {
    outline: 0;
  }

  .icon {
    display: flex;
    align-items: center;
    justify-content: center;

    svg,
    img {
      width: 100%;
      height: 100%;
    }

    svg {
      color: inherit;
    }
  }

  .label {
    transform: translateY(1px);
  }

  &.primary {
    &.solid {
      background-color: var(--primary-main);
      color: var(--white);

      &:hover:not(:disabled) {
        background-color: var(--primary-dark);
      }
    }

    &.outlined {
      border: border.$width-thin solid var(--primary-main);
      color: var(--primary-main);
      background: none;

      &:hover:not(:disabled) {
        background-color: color-mix(in srgb, var(--primary-main) 12%, transparent);
        color: var(--primary-dark);
      }
    }

    &.text {
      color: var(--primary-main);
      border-color: transparent;
      background: none;

      &:hover:not(:disabled) {
        background-color: color-mix(in srgb, var(--primary-main) 12%, transparent);
        color: var(--primary-dark);
      }
    }
  }

  &.secondary {
    &.solid {
      background-color: var(--secondary-main);
      color: var(--white);

      &:hover:not(:disabled) {
        background-color: var(--secondary-dark);
      }
    }

    &.outlined {
      border: border.$width-thin solid var(--secondary-main);
      color: var(--secondary-main);
      background: none;

      &:hover:not(:disabled) {
        background-color: color-mix(in srgb, var(--secondary-main) 12%, transparent);
        color: var(--secondary-dark)
      }
    }

    &.text {
      color: var(--secondary-main);
      border-color: transparent;
      background: none;

      &:hover:not(:disabled) {
        background-color: color-mix(in srgb, var(--secondary-main) 12%, transparent);
        color: var(--secondary-dark);
      }
    }
  }

  &.success {
    &.solid {
      background-color: var(--success-main);
      color: var(--white);

      &:hover:not(:disabled) {
        background-color: var(--success-dark);
      }
    }

    &.outlined {
      border: border.$width-thin solid var(--success-main);
      color: var(--success-main);
      background: none;

      &:hover:not(:disabled) {
        background-color: color-mix(in srgb, var(--success-main) 12%, transparent);
        color: var(--success-dark);
      }
    }

    &.text {
      color: var(--success-main);
      border-color: transparent;
      background: none;

      &:hover:not(:disabled) {
        background-color: color-mix(in srgb, var(--success-main) 12%, transparent);
        color: var(--success-dark);
      }
    }
  }

  &.error {
    &.solid {
      background-color: var(--error-main);
      color: var(--white);

      &:hover:not(:disabled) {
        background-color: var(--error-dark);
      }
    }

    &.outlined {
      border: border.$width-thin solid var(--error-main);
      color: var(--error-main);
      background: none;

      &:hover:not(:disabled) {
        background-color: color-mix(in srgb, var(--error-main) 12%, transparent);
        color: var(--error-dark);
      }
    }

    &.text {
      color: var(--error-main);
      border-color: transparent;
      background: none;

      &:hover:not(:disabled) {
        background-color: color-mix(in srgb, var(--error-main) 12%, transparent);
        color: var(--error-dark);
      }
    }
  }

  &.warning {
    &.solid {
      background-color: var(--warning-main);
      color: color(--black);

      &:hover:not(:disabled) {
        background-color: var(--warning-dark);
      }
    }

    &.outlined {
      border: border.$width-thin solid var(--warning-main);
      color: var(--warning-main);
      background: none;

      &:hover:not(:disabled) {
        background-color: color-mix(in srgb, var(--warning-main) 12%, transparent);
        color: var(--warning-dark);
      }
    }

    &.text {
      color: var(--warning-dark);
      border-color: transparent;
      background: none;

      &:hover:not(:disabled) {
        background-color: color-mix(in srgb, var(--warning-main) 12%, transparent);
        color: var(--warning-dark);
      }
    }
  }

  &.small {
    padding: calc(spacing.$spacing-tiny + $additionalButtonHeight) spacing.$spacing-xxs;
    font-size: font.$size-xxs;
    line-height: calc(font.$size-xxs + font.$line-height-primary);

    .icon {
      width: to-rem(16);
      height: to-rem(16);
    }
  }

  &.medium {
    padding: calc(spacing.$spacing-xxxs + $additionalButtonHeight) spacing.$spacing-xxs;
    font-size: font.$size-xs;
    line-height: calc(font.$size-xs + font.$line-height-primary);

    .icon {
      width: to-rem(18);
      height: to-rem(18);
    }
  }

  &.large {
    padding: calc(spacing.$spacing-xxs + $additionalButtonHeight) spacing.$spacing-xs;
    font-size: font.$size-sm;
    line-height: calc(font.$size-sm + font.$line-height-primary);

    .icon {
      width: to-rem(20);
      height: to-rem(20);
    }
  }

  &.xlarge {
    padding: calc(spacing.$spacing-xs + $additionalButtonHeight) spacing.$spacing-sm;
    font-size: font.$size-md;
    line-height: calc(font.$size-md + font.$line-height-primary);

    .icon {
      width: to-rem(22);
      height: to-rem(22);
    }
  }

  &.radius {
    border-radius: border.$radius-sm;
  }

  &.pill {
    border-radius: border.$radius-pill;
  }

  &.raised {
    box-shadow: rgba(0, 0, 0, 0.2) 0px 2px 4px -2px, rgba(0, 0, 0, 0.14) 0px 2px 2px 0px, rgba(0, 0, 0, 0.12) 0px 1px 5px 0px;
  }

  &.row {
    flex-direction: row;
  }

  &.rowReverse {
    flex-direction: row-reverse;
  }
}