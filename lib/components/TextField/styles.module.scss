@use '../../theme/helpers.scss' as *;
@use '../../theme/variables/border' as border;
@use '../../theme/variables/spacing' as spacing;
@use '../../theme/variables/font' as font;

.textFieldRoot {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  gap: spacing.$spacing-tiny;

  &.block {
    .label {
      width: 100%;
    }
  }

  .label {
    font-family: var(--font-primary);
    font-size: font.$size-xxs;
    line-height: calc(font.$size-xxs + font.$line-height-primary);
    font-style: normal;
    font-weight: font.$weight-regular;
    color: var(--transparent-64);

    .inputWrapper {
      display: flex;
      align-items: center;
      gap: spacing.$spacing-xxxs;
      border: border.$width-thin solid var(--transparent-24);
      border-radius: border.$radius-sm;
      padding: 0 spacing.$spacing-xxxs;
      margin: spacing.$spacing-tiny 0 0;

      &.small {
        height: to-rem(36);

        input {
          font-size: font.$size-xxs;
          line-height: calc(font.$size-xxs + font.$line-height-primary);
        }

        .iconWrapper {
          max-width: to-rem(24);
          max-height: to-rem(24);
        }
      }

      &.medium {
        height: to-rem(40);

        input {
          font-size: font.$size-xs;
          line-height: calc(font.$size-xs + font.$line-height-primary);
        }

        .iconWrapper {
          max-width: to-rem(32);
          max-height: to-rem(32);
        }
      }

      &.large {
        height: to-rem(48);

        input {
          font-size: font.$size-sm;
          line-height: calc(font.$size-sm + font.$line-height-primary);
        }

        .iconWrapper {
          max-width: to-rem(36);
          max-height: to-rem(36);
        }
      }


      &.leftIcon {
        flex-direction: row;
      }

      &.rightIcon {
        flex-direction: row-reverse;
      }

      .iconWrapper {
        display: flex;
        align-items: center;
        justify-content: center;
        width: 100%;
        height: 100%;

        img,
        svg {
          width: 100%;
          height: 100%;
        }
      }

      input {
        height: 100%;
        width: 100%;
        border: none;
        background-color: transparent;

        font-family: var(--font-primary);
        font-weight: font.$weight-regular;
        font-style: normal;

        &::placeholder {
          color: (--transparent-48);
        }

        &:focus-visible {
          outline: none;
        }
      }
    }
  }

  &.primary {
    &:focus-within {
      .label {
        color: var(--primary-main);
      }

      .inputWrapper {
        border-color: transparent;
        outline: border.$width-thick solid var(--primary-main)
      }
    }
  }

  &.secondary {
    &:focus-within {
      .label {
        color: var(--secondary-main);
      }

      .inputWrapper {
        border-color: transparent;
        outline: border.$width-thick solid var(--secondary-main);
      }
    }
  }

  &.error {

    .label,
    .hint {
      color: var(--error-main);
      animation: shakingAnimation 360ms linear;
    }

    .inputWrapper {
      border: border.$width-thin solid var(--error-main);

      &:focus-within {
        border-color: transparent;
        outline: border.$width-thick solid var(--error-main);
      }
    }
  }

  .hint {
    font-family: var(--font-primary);
    margin: 0 spacing.$spacing-tiny;
    font-size: font.$size-xxxs;
    line-height: calc(font.$size-xxxs + font.$line-height-primary);
    font-weight: font.$weight-medium;
    color: var(--transparent-48);
  }
}

@keyframes shakingAnimation {
  0% {
    transform: translateX(0);
  }

  25% {
    transform: translateX(2px);
  }

  50% {
    transform: translateX(-2px);
  }

  75% {
    transform: translateX(2px);
  }

  100% {
    transform: translateX(0);
  }
}